1. 下载安装
2. 进入指定目录(不一定为空)
3. git init                     
	初始化
4. git add filename / multifilename 
	添加文件
5. git commit -m "comment"
	提交更改
6. git status
	查看状态
7. git log            
	查看提交信息
8. git reset --hard HEAD^
	时光机(回到旧版本)  
	注: 用HEAD表示当前版本，
	    也就是最新的提交3628164...882e1e0
	    （注意我的提交ID和你的肯定不一样），
	    上一个版本就是HEAD^，
	    上上一个版本就是HEAD^^，
	    当然往上100个版本写100个^比较容易数不过来，
	    所以写成HEAD~100。
9. git reset --hard 版本id
	时光机(任意版本)
	注: id不需要全部写出来..
10. git reflog
	时光记录(查询版本移动记录, 有版本号哦)


==================其他的咯===================

1. git 的暂存区  
      add 的文件会在暂存区..
      commit 的是暂存区的文件..
      文件要是没有 在暂存区当然其更改也没有提交..
      每次修改，如果不add到暂存区，那就不会加入到commit中。
      第一次修改 -> git add -> 第二次修改 -> git add -> git commit
2. 也就是说 add 以后再提交..
3. 关于撤销更改(丢弃工作区的修改)

	命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：

	一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；

	一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

	总之，就是让这个文件回到最近一次git commit或git add时的状态。
4. 关于撤销更改(丢弃缓存区的修改)
	命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：

	一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；

	一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

	总之，就是让这个文件回到最近一次git commit或git add时的状态。